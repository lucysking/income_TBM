haven::read_spss(demo_full_file, user_na = 999) %>%
select(
ELS_ID,
household_income = Household_Income,
ppl_in_home = pplinhome_1_TEXT
) %>%
filter(
!is.na(household_income),
household_income != 999,
household_income != "11"#some are coded in SPSS as 11, which indicates "don't know"
) %>%
mutate(
household_income = as.character(household_income),
household_income_numeric = as.numeric(
recode(
household_income,
"1" = "5000",
"2" = "7500",
"3" = "12500",
"4" = "20000",
"5" = "30000",
"6" = "42500",
"7" = "62500",
"8" = "87500",
"9" = "125000",
"10" = "150000"
)
),
#santa clara country income : 80% of median income (ratios <= 1 are therefore "low income")
#https://www.huduser.gov/portal/datasets/il/il2017/2017summary.odn
SC_lowincome_limit = as.numeric(
recode(
ppl_in_home,
"1" = "59350",
"2" = "67800",
"3" = "76300",
"4" = "84750",
"5" = "91500",
"6" = "98350",
"7" = "105100",
"8" = "111900",
.default = "111900"
)
),
income_needs = household_income_numeric / SC_lowincome_limit
)
ggplot(inr, aes(x = income_needs)) +
geom_histogram(bins = 30, position = "dodge", fill = "gray", color = "black") +
theme_bw()
inr <-
inr %>%
mutate(
ELS_ID = as.integer(ELS_ID)
) %>%
left_join(
read_csv(covariates_file) %>%
select(
ELS_ID,
included = ICV
) %>%
mutate(ELS_ID = as.integer(ELS_ID)),
by = "ELS_ID"
) %>%
mutate(
included = if_else(
!is.na(included),
"included", "not"
)
)
t.test(inr$income_needs ~ included)
t.test(inr$income_needs ~ inr$included)
knitr::opts_chunk$set(echo = TRUE)
##Libraries
library(tidyverse)
##Parameters
#files
t1_cbcl_file <- "~/Desktop/ELS/income_TBM/data/ELS_T1S1_CBCL_old_1991_Final Profile Data_ID 1-218.sav"
t1_ysr_file <- "~/Desktop/ELS/income_TBM/data/ELS_T1S1_YSR_old_1991_Final Profile Data_ID 1-218.sav"
roi_inc_int_file <- "~/Desktop/ELS/income_TBM/data/inc_interac_46rois_all.xlsx" #clusters identified in INR*sex TBM model
inr_file <- "~/Desktop/ELS/income_TBM/data/income_to_needs.csv"
covariates_file <- "~/Desktop/ELS/income_TBM/data/tbm_cov_income.csv"
roi_symptoms <-
readxl::read_xlsx(roi_inc_int_file, sheet = "Vols") %>%
left_join(read_csv(covariates_file), by = "ELS_ID") %>%
left_join(read_csv(inr_file), by = "ELS_ID") %>%
left_join(
haven::read_sav(t1_cbcl_file, user_na = 999) %>%
mutate(
ELS_ID = as.integer(ELS_ID),
cbcl_externalizing = as.integer(
T1_CBCL_old_Externalizing_Problems_Total_Score
),
cbcl_externalizing = if_else(
cbcl_externalizing == 999, NA_integer_, cbcl_externalizing
),
cbcl_internalizing = as.integer(
T1_CBCL_old_Internalizing_Problems_Total_Score
),
cbcl_internalizing = if_else(
cbcl_internalizing == 999, NA_integer_, cbcl_internalizing
)
) %>%
select(
ELS_ID,
cbcl_externalizing,
cbcl_internalizing
),
by = "ELS_ID"
) %>%
left_join(
haven::read_sav(t1_ysr_file, user_na = 999) %>%
mutate(
ELS_ID = as.integer(ELS_ID),
ysr_internalizing = as.integer(
T1_YSR_old_Internalizing_Problems_Total_Score
),
ysr_internalizing = if_else(
ysr_internalizing == 999, NA_integer_, ysr_internalizing
),
ysr_externalizing = as.integer(
T1_YSR_old_Externalizing_Problems_Total_Score
),
ysr_externalizing = if_else(
ysr_externalizing == 999, NA_integer_, ysr_externalizing
)
) %>%
select(
ELS_ID,
ysr_internalizing,
ysr_externalizing
)
)
#male only dataset
roi_symptoms_male <-
roi_symptoms %>%
filter(Male == 1)
#female only dataset
roi_symptoms_female <-
roi_symptoms %>%
filter(Male == 0)
roi_symptoms %>%
filter(Male == 1) %>%
ggplot(aes(income_needs, Neg_18)) +
geom_vline(xintercept = 1, linetype = "dashed") +
geom_point(size = 4, color = "blue", alpha = 1/2) +
geom_smooth(
method = "lm",
formula = y ~ sqrt(x),
se = FALSE,
size = 3,
color = "blue"
) +
theme_minimal() +
theme(
legend.text = element_text(size = 24),
axis.title = element_text(size = 28),
axis.text = element_text(size = 24)
) +
labs(
x = "Income-to-needs ratio",
y = "left MTG volume"
)
ggsave(
"~/Desktop/ELS/dep_thrt_TBM/depthrt_sync/plots/inr_mtg_boys.jpeg",
width = 8,
height = 8
)
ggsave(
"~/Desktop/ELS/income_TBM/income_TBM_sync/plots/inr_mtg_boys.jpeg",
width = 8,
height = 8
)
roi_symptoms %>%
filter(Male == 1) %>%
ggplot(aes(income_needs, Neg_18)) +
geom_vline(xintercept = 1, linetype = "dashed") +
geom_point(size = 4, color = "blue", alpha = 1/2) +
geom_smooth(
method = "lm",
formula = y ~ sqrt(x),
se = FALSE,
size = 3,
color = "blue"
) +
theme_minimal() +
theme(
legend.text = element_text(size = 24),
axis.title = element_text(size = 28),
axis.text = element_text(size = 24)
) +
labs(
x = "Income-to-needs ratio",
y = "Left MTG volume"
)
ggsave(
"~/Desktop/ELS/income_TBM/income_TBM_sync/plots/inr_mtg_boys.jpeg",
width = 8,
height = 8
)
roi_symptoms %>%
filter(Male == 1) %>%
ggplot(aes(Neg_18, cbcl_externalizing)) +
geom_point(size = 4, color = "blue", alpha = 1/2) +
geom_smooth(
method = "lm",
se = FALSE,
size = 3,
color = "blue"
) +
theme_minimal() +
theme(
legend.text = element_text(size = 24),
axis.title = element_text(size = 28),
axis.text = element_text(size = 24)
) +
labs(
x = "Left MTG volume",
y = "Externalizing symptpms"
)
ggsave(
"~/Desktop/ELS/income_TBM/income_TBM_sync/plots/mtg_extern_boys.jpeg",
width = 8,
height = 8
)
roi_symptoms %>%
mutate(
Sex = factor(
Male,
levels = c("0", "1"),
labels = c("Female", "Male")
)
) %>%
ggplot(aes(income_needs, Neg_39, color = fct_rev(Sex))) +
geom_point(size = 2) +
geom_vline(xintercept = 1, linetype = "dashed") +
geom_smooth(method = "lm", formula = y ~ sqrt(x), size = 2, se = FALSE) +
scale_color_manual(values = c("blue", "red")) +
theme_minimal() +
theme(
legend.position = "bottom",
legend.text = element_text(size = 24),
axis.title = element_text(size = 28),
axis.text = element_text(size = 24)
) +
labs(
color = NULL,
x = "Income-to-needs ratio",
y = "Left MTG/hippocampus/\nCGH volume"
)
ggsave(
"~/Desktop/ELS/income_TBM/income_TBM_sync/plots/inr_sex_left_hipp.jpeg",
width = 8,
height = 8
)
?aic
?aic()
?AIC()
mod_extern_income_lin = lm(cbcl_externalizing ~ income_needs, data = roi_symptoms)
summary(mod_extern_income_lin)
AIC(mod_extern_income_lin)
confint(mod_extern_income_lin)
mod_sex_extern_income_lin =
lm(cbcl_externalizing ~ income_needs * sex_effect_coded, data = roi_symptoms)
mod_sex_extern_income_lin =
lm(cbcl_externalizing ~ income_needs * sex_effect_coded, data = roi_symptoms)
knitr::opts_chunk$set(echo = TRUE)
##Libraries
library(tidyverse)
##Parameters
#files
t1_cbcl_file <- "~/Desktop/ELS/income_TBM/data/ELS_T1S1_CBCL_old_1991_Final Profile Data_ID 1-218.sav"
t1_ysr_file <- "~/Desktop/ELS/income_TBM/data/ELS_T1S1_YSR_old_1991_Final Profile Data_ID 1-218.sav"
roi_inc_int_file <- "~/Desktop/ELS/income_TBM/data/inc_interac_46rois_all.xlsx" #clusters identified in INR*sex TBM model
inr_file <- "~/Desktop/ELS/income_TBM/data/income_to_needs.csv"
covariates_file <- "~/Desktop/ELS/income_TBM/data/tbm_cov_income.csv"
roi_symptoms <-
readxl::read_xlsx(roi_inc_int_file, sheet = "Vols") %>%
left_join(read_csv(covariates_file), by = "ELS_ID") %>%
left_join(read_csv(inr_file), by = "ELS_ID") %>%
left_join(
haven::read_sav(t1_cbcl_file, user_na = 999) %>%
mutate(
ELS_ID = as.integer(ELS_ID),
cbcl_externalizing = as.integer(
T1_CBCL_old_Externalizing_Problems_Total_Score
),
cbcl_externalizing = if_else(
cbcl_externalizing == 999, NA_integer_, cbcl_externalizing
)
) %>%
select(
ELS_ID,
cbcl_externalizing
),
by = "ELS_ID"
) %>%
left_join(
haven::read_sav(t1_ysr_file, user_na = 999) %>%
mutate(
ELS_ID = as.integer(ELS_ID),
ysr_internalizing = as.integer(
T1_YSR_old_Internalizing_Problems_Total_Score
),
ysr_internalizing = if_else(
ysr_internalizing == 999, NA_integer_, ysr_internalizing
)
) %>%
select(
ELS_ID,
ysr_internalizing,
ysr_externalizing
)
)
roi_symptoms <-
readxl::read_xlsx(roi_inc_int_file, sheet = "Vols") %>%
left_join(read_csv(covariates_file), by = "ELS_ID") %>%
left_join(read_csv(inr_file), by = "ELS_ID") %>%
left_join(
haven::read_sav(t1_cbcl_file, user_na = 999) %>%
mutate(
ELS_ID = as.integer(ELS_ID),
cbcl_externalizing = as.integer(
T1_CBCL_old_Externalizing_Problems_Total_Score
),
cbcl_externalizing = if_else(
cbcl_externalizing == 999, NA_integer_, cbcl_externalizing
)
) %>%
select(
ELS_ID,
cbcl_externalizing
),
by = "ELS_ID"
) %>%
left_join(
haven::read_sav(t1_ysr_file, user_na = 999) %>%
mutate(
ELS_ID = as.integer(ELS_ID),
ysr_internalizing = as.integer(
T1_YSR_old_Internalizing_Problems_Total_Score
),
ysr_internalizing = if_else(
ysr_internalizing == 999, NA_integer_, ysr_internalizing
)
) %>%
select(
ELS_ID,
ysr_internalizing
)
)
#male only dataset
roi_symptoms_male <-
roi_symptoms %>%
filter(Male == 1)
#female only dataset
roi_symptoms_female <-
roi_symptoms %>%
filter(Male == 0)
roi_symptoms <-
roi_symptoms %>%
mutate(
male_simple_effect = recode(
Male,
"1" = "0",
"0" = "1"
),
female_simple_effect = recode(
Male,
"1" = "1",
"0" = "0"
),
sex_effect_coded = recode(
Male,
"1" = "1", #male
"0" = "-1" #female
),
white_effect_coded = recode(
White,
"1" = "1",
"0" = "-1"
)
)
mod_sex_extern_income_lin =
lm(cbcl_externalizing ~ income_needs * sex_effect_coded, data = roi_symptoms)
summary(mod_sex_extern_income_lin)
AIC(mod_sex_extern_income_lin)
confint(mod_sex_extern_income_lin)
mod_male_extern_income_lin =
lm(cbcl_externalizing ~ income_needs * male_simple_effect, data = roi_symptoms)
summary(mod_male_extern_income_lin)
confint(mod_male_extern_income_lin)
summary(lm(cbcl_externalizing ~ income_needs, data = roi_symptoms_male))
mod_female_extern_income_lin =
lm(cbcl_externalizing ~ income_needs * female_simple_effect, data = roi_symptoms)
summary(mod_female_extern_income_lin)
confint(mod_female_extern_income_lin)
summary(lm(cbcl_externalizing ~ income_needs, data = roi_symptoms_female))
AIC(mod_extern_income_lin)
AIC(mod_sex_extern_income_lin)
mod_intern_income_lin = lm(ysr_internalizing ~ income_needs, data = roi_symptoms)
summary(mod_intern_income_lin)
AIC(mod_intern_income_lin)
confint(mod_intern_income_lin)
mod_sex_intern_income_lin =
lm(ysr_internalizing ~ income_needs * sex_effect_coded, data = roi_symptoms)
summary(mod_sex_intern_income_lin)
AIC(mod_sex_intern_income_lin)
confint(mod_sex_intern_income_lin)
demo %>%
count(I2N < 1)
demo %>%
count(I2N < 1) %>%
mutate(
percent = n / sum(n)
)
demo %>%
count(I2N < 1) %>%
group_by(Male) %>%
mutate(
percent = n / sum(n)
)
#Libraries
library(tidyverse)
#Parameters
demographic_file <- "~/Desktop/ELS/income_TBM/data/demographics_table1_201803.sav"
covariates_file <- "~/Desktop/ELS/income_TBM/data/tbm_cov_income.csv"
demo <-
haven::read_sav(demographic_file) %>%
filter(I2N != "NA") %>%
mutate(I2N = as.numeric(I2N)) %>%
rename(ELS_ID = Sub)
demo %>%
count(Male)
demo %>%
group_by(Male) %>%
summarise_all(
funs(mean, sd)
)
demo_male <-
demo %>%
filter(Male == 1)
range(demo_male$Age)
range(demo_male$Tanner)
range(demo_male$TBV)
demo_female <-
demo %>%
filter(Male == 0)
range(demo_female$Age)
range(demo_female$Tanner)
range(demo_female$TBV)
range(demo_female$I2N)
sex_t_test <- function(x) {
t.test(x ~ demo$Male, var.equal = TRUE)
}
sex_t_test(demo$Age)
sex_t_test(demo$Tanner)
sex_t_test(demo$TBV)
sex_t_test(demo$I2N)
demo <-
demo %>%
mutate(
Race = as.character(Race),
Race = dplyr::recode(
Race,
"1" = "Caucasian",
"2" = "African American",
"3" = "Hispanic",
"4" = "Asian",
"5" = "Biracial",
"6" = "Other"
)
)
demo %>%
group_by(Male, Race) %>%
summarise(
n = n()
) %>%
mutate(
percent = n / sum(n)
) %>%
arrange(Male, desc(percent))
demo <-
demo %>%
mutate(
white = as.factor(
recode(
Race,
"Caucasian" = 1,
.default = 0
)
)
)
chisq.test(demo$white, demo$Male)
demo <-
demo %>%
mutate(
income_factor = as.factor(
if_else(
as.numeric(Income) > median(as.numeric(Income)),
1, 0
)
)
)
chisq.test(demo$income_factor, demo$Male)
View(demo)
chisq.test(demo$income_factor, demo$Male)
demo %>%
count(I2N < 1) %>%
mutate(
percent = n / sum(n)
)
View(demo)
